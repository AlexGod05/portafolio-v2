---
import GitHub from "@/icons/GitHub.astro"
import Section from "../Section.astro"

import { projects } from "@cv"
---

<Section class="accordion-container">
  <button class="accordion-header" aria-expanded="false">
    <h2>Proyectos</h2>
    <span class="accordion-icon">â–¼</span>
  </button>

  <div class="accordion-content" aria-hidden="true">
    <ul>
      {
        projects.map(
          ({ url, description, highlights, name }) => {
            return (
              <li>
                <article>
                  <header>
                    <h3>
                      <a href={url} target="_blank" title={`Ver el proyecto ${name}`}>
                        {name}
                      </a>
                    </h3>
                    <p>{description}</p>
                  </header>
                  <footer>
                    {highlights.map((highlight) => {
                      return <span>{highlight}</span>
                    })}
                  </footer>
                </article>
              </li>
            )
          }
        )
      }
    </ul>
  </div>
</Section>

<style>
  .accordion-container {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
  }

  .accordion-header {
    width: 100%;
    padding: 16px;
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: left;
  }

  .accordion-header:hover {
    background: #f9f9f9;
  }

  .accordion-header h2 {
    margin: 0;
  }

  .accordion-icon {
    font-size: 12px;
    color: #666;
    transition: transform 0.3s ease;
  }

  .accordion-header[aria-expanded="true"] .accordion-icon {
    transform: rotate(180deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    padding: 0 16px;
  }

  .accordion-content[aria-hidden="false"] {
    max-height: 2000px;
    padding: 16px;
  }

  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-inline: -16px;
  }

  article {
    border-radius: 8px;
    border: 1px solid #f2f2f2;
    gap: 16px;
    display: flex;
    flex-direction: column;
    padding: 16px;
    height: 100%;
  }

  article header {
    flex: 1;
  }

  article h3 {
    margin-bottom: 4px;
  }

  article a {
    color: #111;
  }

  article a:hover {
    text-decoration: underline;
  }

  article p {
    font-size: 0.75rem;
    line-height: 1.2rem;
    margin-bottom: 4px;
  }

  article h3 span {
    color: rgb(0, 188, 47);
  }

  footer {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    font-size: 0.6rem;
  }

  footer span {
    border-radius: 6px;
    background: #eee;
    color: #444;
    font-size: 0.6rem;
    font-weight: 500;
    padding: 0.2rem 0.6rem;
  }

  .github-code-link {
    margin-left: 5px;
  }

  @media (width <= 700px) {
    ul {
      margin-inline: 0px;
    }

    article {
      border: none;
      box-shadow: 0 1px 1px #f2f2f2;
      padding: 0 0 16px 0;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    accordionHeaders.forEach(header => {
      header.addEventListener('click', () => {
        const expanded = header.getAttribute('aria-expanded') === 'true';
        header.setAttribute('aria-expanded', String(!expanded));
        
        const content = header.nextElementSibling;
        if (content) {
          content.setAttribute('aria-hidden', String(expanded));
        }
      });
    });
  });
</script>
